[project]
name = "true-tech-hack-2025"
version = "0.1.0"
description = "AI JSON Schema generator for MWS API"
authors = [
    {name = "Sergey Natalenko",email = "sergey.natalenko@mail.ru"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12, <4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "pydantic (>=2.11.3,<3.0.0)",
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "alembic (>=1.15.2,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "dishka (>=1.5.3,<2.0.0)",
    "asyncly (>=0.3.3,<0.4.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "structlog (>=25.2.0,<26.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
mypy = "^1.15.0"
ruff = "^0.11.6"

[tool.pytest.ini_options]
asyncio_mode = "auto"
python_files = "test_*"
python_functions = "test_*"
python_classes = "TestSuite*"
addopts = "-p no:cacheprovider"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
fail_under = 70
show_missing = true
skip_covered = false
skip_empty = true
omit = ["*/migrations/*", "*/__main__.py"]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == __main__:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pass",
]

[tool.coverage.run]
branch = true
source = ["ai_json_generator"]
command_line = "-m pytest"

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
line-length = 88
exclude = [".git", ".mypy_cache", ".ruff_cache", ".venv"]
indent-width = 4
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
select = [
    "BLE",
    "C90",
    "E",
    "F",
    "G",
    "I",
    "ICN",
    "ISC",
    "PLE",
    "Q",
    "RUF006",
    "RUF100",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
]
ignore = ["ISC001"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["ai_json_generator", "tests"]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true

